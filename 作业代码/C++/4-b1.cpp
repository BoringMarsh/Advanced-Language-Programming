/*2151294 信11 马威*/
#include <iostream>
using namespace std;

/***************************************************************************
  函数名称：
  功    能：输出大写的0~9
  输入参数：
  返 回 值：
  说    明：除本函数外，不允许任何函数中输出“零”-“玖”!!!!!!
***************************************************************************/
void daxie(int num, int flag_of_zero)
{
	/* 不允许对本函数做任何修改 */
	switch (num) {
	case 0:
		if (flag_of_zero)	//此标记什么意思请自行思考
			cout << "零";
		break;
	case 1:
		cout << "壹";
		break;
	case 2:
		cout << "贰";
		break;
	case 3:
		cout << "叁";
		break;
	case 4:
		cout << "肆";
		break;
	case 5:
		cout << "伍";
		break;
	case 6:
		cout << "陆";
		break;
	case 7:
		cout << "柒";
		break;
	case 8:
		cout << "捌";
		break;
	case 9:
		cout << "玖";
		break;
	default:
		cout << "error";
		break;
	}
}

int main()
{
	double i, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10;  /*定义所需变量，i是已修正误差的预处理值，i1是输入值，i2至i10是各个位数*/
	double x, X, x3, x2, x1;                            /*定义所需变量，x是输入值中的个位至百分位的部分，X是已扩大x的预处理值，x3至x1是各个位数*/
	cout << "请输入[0-100亿)之间的数字:" << endl;       /*输出提示语*/
	cin >> i1;                                          /*输入变量值*/
	i = i1 + 1e-3;                                      /*给输入值加上一个足够小的数，修正误差*/

	/*将预处理值适当缩小取整，借此取得各个位数，然而（i / 1e+0）可能会超出int范围而产生错误，故该方法只能取到十位，无法取到个位*/
	i10 = int(i / 1e+9);  /*取十亿位*/
	i9 = int(i / 1e+8) - i10 * 1e+1;  /*取亿位*/
	i8 = int(i / 1e+7) - i10 * 1e+2 - i9 * 1e+1;  /*取千万位*/
	i7 = int(i / 1e+6) - i10 * 1e+3 - i9 * 1e+2 - i8 * 1e+1;  /*取百万位*/
	i6 = int(i / 1e+5) - i10 * 1e+4 - i9 * 1e+3 - i8 * 1e+2 - i7 * 1e+1;  /*取十万位*/
	i5 = int(i / 1e+4) - i10 * 1e+5 - i9 * 1e+4 - i8 * 1e+3 - i7 * 1e+2 - i6 * 1e+1;  /*取万位*/
	i4 = int(i / 1e+3) - i10 * 1e+6 - i9 * 1e+5 - i8 * 1e+4 - i7 * 1e+3 - i6 * 1e+2 - i5 * 1e+1;  /*取千位*/
	i3 = int(i / 1e+2) - i10 * 1e+7 - i9 * 1e+6 - i8 * 1e+5 - i7 * 1e+4 - i6 * 1e+3 - i5 * 1e+2 - i4 * 1e+1;  /*取百位*/
	i2 = int(i / 1e+1) - i10 * 1e+8 - i9 * 1e+7 - i8 * 1e+6 - i7 * 1e+5 - i6 * 1e+4 - i5 * 1e+3 - i4 * 1e+2 - i3 * 1e+1;  /*取十位*/

	x = i - i10 * 1e+9 - i9 * 1e+8 - i8 * 1e+7 - i7 * 1e+6 - i6 * 1e+5 - i5 * 1e+4 - i4 * 1e+3 - i3 * 1e+2 - i2 * 1e+1;  /*借助取得的位数计算输入值中的个位至百分位的部分*/
	X = x * 100.0;  /*计算扩大x的预处理值*/
	x3 = int(X / 1e+2);  /*取个位*/
	x2 = int(X / 1e+1) - x3 * 1e+1;  /*取十分位*/
	x1 = int(X) - x3 * 1e+2 - x2 * 1e+1;  /*取百分位*/

	cout << "大写结果是:" << endl;  /*输出提示语*/

	/*取位数完成，下面进行人民币大写转化*/
	/*主要思路：分开各个位处理。*/
	/*每一位非零时数用函数daxie()输出；数后面还有非数的字的，单独输出*/
	/*每一位为零时，若该位以前的位全为零，则该位也不输出；
	若该位以前的位不全为零，则看该位是否需要在这一位读出"零"，需要则用函数daxie()输出；
	仍不需要就先不输出，把输出"零"的任务交给下一位处理*/

	/*十亿位输出的格式处理*/
	if (i10 == 0) {
		cout << "";
	}

	else {
		daxie(int(i10), 0);
		cout << "拾";
	}

	/*亿位输出的格式处理*/
	if (i9 == 0) {
		if (i10 == 0) {
			cout << "";
		}

		else {
			cout << "亿";
		}
	}

	else {
		daxie(int(i9), 0);
		cout << "亿";
	}

	/*千万位输出的格式处理*/
	if (i8 == 0) {
		if (i9 == 0 && i10 == 0) {
			cout << "";
		}

		else {
			if (i7 == 0) {
				cout << "";
			}

			else {
				daxie(int(i8), 1);
			}
		}
	}

	else {
		daxie(int(i8), 0);
		cout << "仟";
	}

	/*百万位输出的格式处理*/
	if (i7 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0) {
			cout << "";
		}

		else {
			if (i6 == 0) {
				cout << "";
			}

			else {
				daxie(int(i7), 1);
			}
		}
	}

	else {
		daxie(int(i7), 0);
		cout << "佰";
	}

	/*十万位输出的格式处理*/
	if (i6 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0) {
			cout << "";
		}

		else {
			if (i5 == 0) {
				cout << "";
			}

			else {
				daxie(int(i6), 1);
			}
		}
	}

	else {
		daxie(int(i6), 0);
		cout << "拾";
	}

	/*万位输出的格式处理*/
	if (i5 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0) {
			cout << "";
		}

		else {
			if (i8 == 0 && i7 == 0 && i6 == 0) {
				cout << "";
			}

			else {
				cout << "万";
			}
		}
	}

	else {
		daxie(int(i5), 0);
		cout << "万";
	}

	/*千位输出的格式处理*/
	if (i4 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0) {
			cout << "";
		}

		else {
			if (i3 == 0) {
				cout << "";
			}

			else {
				daxie(int(i4), 1);
			}
		}
	}

	else {
		daxie(int(i4), 0);
		cout << "仟";
	}

	/*百位输出的格式处理*/
	if (i3 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0 && i4 == 0) {
			cout << "";
		}

		else {
			if (i2 == 0) {
				cout << "";
			}

			else {
				daxie(int(i3), 1);
			}
		}
	}

	else {
		daxie(int(i3), 0);
		cout << "佰";
	}

	/*十位输出的格式处理*/
	if (i2 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0 && i4 == 0 && i3 == 0) {
			cout << "";
		}

		else {
			if (x3 == 0) {
				cout << "";
			}

			else {
				daxie(int(i2), 1);
			}
		}
	}

	else {
		daxie(int(i2), 0);
		cout << "拾";
	}

	/*个位输出的格式处理*/
	if (x3 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0 && i4 == 0 && i3 == 0 && i2 == 0) {
			cout << "";
		}

		else {
			cout << "圆";
		}
	}

	else {
		daxie(int(x3), 0);
		cout << "圆";
	}

	/*第一个"整"输出的格式处理*/
	if (x2 == 0 && x1 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0 && i4 == 0 && i3 == 0 && i2 == 0 && x3 == 0) {
			cout << "";
		}

		else {
			cout << "整";
		}
	}

	/*十分位输出的格式处理*/
	if (x2 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0 && i4 == 0 && i3 == 0 && i2 == 0 && x3 == 0) {
			cout << "";
		}

		else {
			if (x1 == 0) {
				cout << "";
			}

			else {
				daxie(int(x2), 1);
			}
		}
	}

	else {
		daxie(int(x2), 0);
		cout << "角";
	}

	/*第二个"整"输出的格式处理*/
	if (x2 != 0 && x1 == 0) {
		cout << "整";
	}

	/*百分位输出的格式处理*/
	if (x1 == 0) {
		if (i10 == 0 && i9 == 0 && i8 == 0 && i7 == 0 && i6 == 0 && i5 == 0 && i4 == 0 && i3 == 0 && i2 == 0 && x3 == 0 && x2 == 0) {
			daxie(int(x1), 1);
			cout << "圆整";
		}

		else {
			cout << "";
		}
	}

	else {
		daxie(int(x1), 0);
		cout << "分";
	}

	cout << endl;  /*输出完毕后的换行符*/

	return 0;
}